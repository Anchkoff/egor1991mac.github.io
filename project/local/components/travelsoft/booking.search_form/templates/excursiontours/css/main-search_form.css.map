{"version":3,"sources":["webpack:///./src/scss/utils/var.scss","webpack:///./src/scss/components/main-search_form-with-tabs-v2.scss","webpack:///./src/scss/bscss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAyDA,IACE,UAAW,CACX,UAAW,CACX,iBAJc,CAKf,kBAyBC,wBAPmB,CAQnB,aAPoB,CAQrB,KAoBC,iBAAkB,CAElB,aAxFuB,CAyFvB,kBA5FgB,CCjBlB,OACI,iBAAkB,CACrB,+BAGG,UAAW,CACX,4BAAY,CAAZ,mBAAoB,CAHxB,8CAKQ,UAAW,CACX,eAAgB,CAChB,iBAAkB,CAClB,kBDXmB,CCYnB,mBAAa,CAAb,mBAAa,CAAb,YAAa,CACb,sBAA2B,CAA3B,mBAA2B,CAA3B,0BAA2B,CAC3B,qBAAqB,CAArB,kBAAqB,CAArB,oBAAqB,CACrB,uBAAwB,CACxB,6CAA6C,CAbrD,iEAeY,YAAa,CAfzB,qCA4CQ,iBAAkB,CAClB,iBAAkB,CAClB,UAAW,CACX,kCAA2B,CAA3B,0BAA2B,CAC3B,QAAS,CAhDjB,yCAkDY,6BAAgB,CAAhB,4BAAgB,CAAhB,sBAAgB,CAAhB,kBAAmB,CAlD/B,iDAqDY,eAAgB,CAChB,2BAAY,CAAZ,cAAe,CAtD3B,uDAwDgB,UD9Ce,CCV/B,4DA2DgB,mBAAS,CAAT,mBAAS,CAAT,YAAa,CAShB,8BApEb,4DA6DoB,gBAAiB,CAOxB,CApEb,iEAgEoB,4BAAgB,CAAhB,eAAgB,CAChB,eAAgB,CAChB,kBAAmB,CAlEvC,0CAyEY,eAAgB,CAEhB,4BAAY,CAAZ,mBAAoB,CA3EhC,4CA8EY,kBDzEO,CCLnB,gDAgFgB,WAAY,CACZ,SAAU,CACV,iBAAkB,CAClB,oBAAqB,CACrB,QAAS,CACT,wBD1EoB,CC2EpB,uBDzFW,CC0FX,kBAAmB,CACnB,WAAY,CAxF5B,qDA0FoB,iBAAkB,CAClB,SAAU,CA3F9B,0CAgGY,wBDpFsB,CCqFtB,iBAAmB,CAjG/B,oCAuGQ,uBAAuB,CAAvB,oBAAuB,CAAvB,sBAAuB,CACvB,WAAY,CAxGpB,yCA0GY,wBAAyB,CACzB,WAAY,CACZ,sBAAuB,CACvB,kBDhHe,CCiHf,eAAgB,CAChB,WAAY,CACZ,UAAW,CACX,kBAAmB,CAjH/B,gDAmHgB,wBDxGoB,CCyGpB,WAAY,CACZ,yBAA0B,CAC1B,SAAU,CACV,iBAAkB,CAvHlC,sDAyHoB,UAAW,CACX,aAAc,CACd,iBAAkB,CAClB,UAAW,CACX,UAAW,CACX,MAAO,CACP,UAAW,CACX,gBAAiB,CAhIrC,yCAqIY,mBAAa,CAAb,mBAAa,CAAb,YAAa,CACb,uBAAiB,CAAjB,oBAAiB,CAAjB,sBAAuB,CAtInC,4CA2IY,aAAc,CACd,UAAW,CA5IvB,8CA8IgB,iBAAkB,CAClB,SAAU,CACV,kBAAmB,CACnB,aD/Hc,CCgIjB,8BAlJb,+BAwJQ,aAAc,CAxJtB,0CA2JgB,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,oBAAiB,CAAjB,gBAAiB,CACjB,iBAAkB,CAClB,iBAAkB,CAhKlC,yCAoKgB,kBAAmB,CApKnC,iDA0KgB,2BAAY,CAAZ,cAAe,CA1K/B,0CA6KgB,kBDhLW,CCkLd,CC3GT,6BDpEJ,+BAmLQ,WAAY,CAnLpB,oCAqLY,QAAS,CACZ,CClHL,6BDpEJ,iDA6LgB,4BAAY,CAAZ,eAAgB,CACnB","file":"components/travelsoft/booking.search_form/templates/excursiontours/css/main-search_form.css","sourcesContent":["@function cr($size) {\n  $remSize: $size / 16px;\n  @return #{$remSize}rem;\n}\n@function ind($i){\n  $size: 1px / 3px * $i;\n  @return #{$size}rem;\n}\n\n$primary: #ff6917;\n$secondary: #ff6917;\n$rating-star: #ffc917;\n\n\n//форма поиска на главной\n$color-label-search-form: white;\n$background-header-form: transparent;\n$background-body-form: transparent;\n//настройки текста контента\n$font-body: Roboto;\n$nav-color-link:#263238;\n$nav-color-link-mobile:#263238;\n$main-color-text: #263238;\n$secondary-color-text: #455a64;\n\n//цвет вторичного фона\n$section-background-2:#f4f7f7;\n\n//цвета опции тура\n$color-best-price: red;\n$color-new: #ffc917;\n$color-doc: $primary;\n$color-custom-tour:green;\n\n//тени\n$shadow:0 0px 15px #d8d8d847;\n$shadow-hover: 0 0px 15px #77767647;\n\n//бордер\n$border-card: 1px solid #b3b3b3 !important;\n\n//карточки\n$card-hover-background:#40322d98;\n$card-background: white;\n//navbar\n$navbar-background: white;\n\n//contact--list\n$navbar-dectop--contact--list-flexbasis: 65%;\n$navbar-contact--list-item-padding:cr(10px);\n$navbar-desctop--contact--list-item-padding: cr(3px);\n$navbar-desctop--contact--list-font-size: cr(13px);\n\n//цвет линии hr\n\n\n$hr-color:263238;\n.hr{\n  height: 1px;\n  width: 100%;\n  background: $hr-color;\n}\n\n//кнопки\n$btn-radius:cr(5px);\n$theme-colors: (\n        \"primary\": $primary,\n        \"secondary\": $secondary\n);\n$btn-padding: cr(15px);\n$btn-height: cr(45px);\n$btn-width: cr(45px);\n\n// форма\n$input-radius:cr(5px);\n$input-height: cr(45px);\n\n\n//Заголовки\n$font-h: Merriweather;\n$header-color: #263238;\n$header-color-invers:#fffdfc;\n$header-hr-width: cr(100px);\n$header-hr-height: cr(2px);\n$header-hr-color: #263238;\nh1,h2,h3,h4,h5,h6{\n  font-family: $font-h;\n  color: $header-color;\n}\n\n//сетка\n$max-width-container:1560px;\n$container-max-widths: (\n        sm: 660px,\n        md: 840px,\n        lg: 1080px,\n        xl: 1320px\n);\n$grid-breakpoints: (\n        xs: 0,\n        sm: 660px,\n        md: 840px,\n        lg: 1080px,\n        xl: 1320px\n);\n\n\nbody{\n  min-height: 2600px;\n\n  color: $main-color-text;\n  font-family: $font-body;\n}","@import \"../utils/var.scss\";\n@import \"../bscss/_mixins.scss\";\nheader{\n    position: relative;\n}\n#main-search_form-with-tabs-v2{\n\n    width: 100%;\n    align-self: baseline;\n    .hor-scrolling{\n        width: 100%;\n        overflow: scroll;\n        position: relative;\n        min-height: cr(68px);\n        display: flex;\n        justify-content: flex-start;\n        align-items: flex-end;\n        -ms-overflow-style: none;\n        border-bottom: 1px solid rgba(255,255,255,.6);\n        &::-webkit-scrollbar {\n            display: none;\n        }\n    }\n    // z-index: 1;\n    // position: absolute;\n    // /* height: 100%; */\n    // left: 50%;\n    // /* bottom: 50%; */\n    // top: 0;\n    // width: 100%;\n    // display: -webkit-box;\n    // display: -ms-flexbox;\n    // display: flex;\n    // -webkit-box-pack: justify;\n    // -ms-flex-pack: justify;\n    // justify-content: space-between;\n    // margin: 0;\n    // margin-right: -50%;\n    // -webkit-transform: translate(-50%, -50%);\n    // transform: translate(-50%, 0);\n    // padding: 0 1rem;\n    // z-index: 100;\n    // background: transparent;\n    // height: 100%;\n    // display: flex;\n    // align-items: center;\n    // justify-content: flex-end;\n\n    .card{\n        border-radius: 3px;\n        position: relative;\n        z-index: 10;\n        box-shadow: none !important;\n        border: 0;\n        &.hor{\n            flex-direction: row;\n        }\n        .form-group{\n            padding: 0 .5rem;\n            flex-basis: 20%;\n            label{\n                color: $color-label-search-form;\n            }\n            &:last-child{\n                display: flex;\n                @include media-breakpoint-down(md){\n                    margin: 1rem auto;\n                }\n                .btn{\n                    flex-basis: 100%;\n                    max-width: 320px;\n                    margin: auto auto 0;\n                }\n            }\n        }\n\n\n        .btn{\n            margin-top: auto;\n\n            align-self: baseline;\n        }\n        &-header{\n            background: $secondary;\n            .h6{\n                color: white;\n                z-index: 1;\n                position: relative;\n                display: inline-block;\n                margin: 0;\n                background: $background-header-form;\n                border-radius: cr(25px);\n                padding: .5rem 1rem;\n                height: 100%;\n                span{\n                    position: relative;\n                    z-index: 1;\n                }\n            }\n        }\n        &-body{\n            background: $background-body-form;\n            padding: cr(20px) 0;\n\n        }\n    }\n\n    .nav{\n        justify-content: center;\n        height: 100%;\n        &-link{\n            border-color: transparent;\n            color: white;\n            padding: 1rem 2rem 1rem;\n            font-size: cr(18px);\n            border-radius: 0;\n            height: 100%;\n            opacity: .6;\n            margin-bottom: -1px;\n            &.active{\n                background: $background-header-form;\n                color: white;\n                border-radius: 4px 4px 0 0;\n                opacity: 1;\n                position: relative;\n                &:after{\n                    content: '';\n                    display: block;\n                    position: absolute;\n                    height: 3px;\n                    bottom: 0px;\n                    left: 0;\n                    width: 100%;\n                    background: white;\n                }\n            }\n        }\n        &-tabs{\n            display: flex;\n            justify-content: center;\n        }\n    }\n    .tab{\n        &-content{\n            padding-top: 0;\n            width: 100%;\n            p{\n                text-align: center;\n                width: 80%;\n                margin: 0 auto 2rem;\n                color: $secondary-color-text;\n            }\n        }\n    }\n\n    @include media-breakpoint-down(md){\n\n        padding-top: 0;\n        .nav{\n            &-pills{\n                position: absolute;\n                top: 0;\n                left: 0;\n                flex-wrap: nowrap;\n                overflow-x: scroll;\n                overflow-y: hidden;\n            }\n\n            &-item{\n                white-space: nowrap;\n            }\n\n        }\n        .card{\n            .form-group{\n                flex-basis: 50%;\n            }\n            .btn{\n                margin-top: cr(10px);\n\n            }\n        }\n    }\n    @include media-breakpoint-down(sm){\n        height: auto;\n        .row{\n            margin: 0;\n        }\n\n\n    }\n    @include media-breakpoint-down(xs){\n        .card{\n            .form-group{\n                flex-basis: 100%;\n            }\n        }\n    }\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}