{"version":3,"sources":["webpack:///./src/scss/utils/var.scss","webpack:///./src/scss/components/navbar.scss","webpack:///./src/scss/bscss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAyDA,IACE,UAAW,CACX,UAAW,CACX,iBAJc,CAKf,kBAyBC,wBAPmB,CAQnB,aAPoB,CAQrB,KAoBC,iBAAkB,CAElB,aAxFuB,CAyFvB,kBA5FgB,CCjBlB,QACI,SAAU,CAEV,gBACI,SAAU,CACb,mBAGG,6CAAiD,CACjD,eDkCiB,CCjCjB,wDDuBW,CCvBX,gDDuBoB,CCtBvB,iBAGG,mBAAa,CAAb,mBAAa,CAAb,YAAa,CACb,wBAAiB,CAAjB,qBAAiB,CAAjB,6BAA8B,CACjC,gBAQG,wCAAY,CAAZ,gCAAY,CAAZ,wBAAY,CAAZ,+CAAyB,CAN5B,sBAEO,aDFW,CCGX,gBDrBe,CCkBtB,uBASO,wCAAyB,CAAzB,gCAAyB,CAAzB,wBAAyB,CAAzB,+CAAyB,CACzB,6BAAW,CAAX,qBAAqB,CACxB,YAID,SAAU,CACV,QAAS,CAlCjB,gCAsCQ,cAAe,CAtCvB,kBA2CY,aDzBW,CClBvB,kCA8CgB,mBAAa,CAAb,mBAAa,CAAb,YAAa,CACb,wBAAmB,CAAnB,qBAAmB,CAAnB,kBAAmB,CACnB,wBAAiB,CAAjB,qBAAiB,CAAjB,6BAA8B,CAhD9C,8DAoDwB,gCAAW,CAAX,wBAAyB,CAC5B,2BAQb,gBACI,eAAgB,CAChB,uCD1B8B,CC4BjC,CCML,8BDDQ,eACI,aDpDc,CCqDd,iBAAkB,CAClB,cDzEW,CC0EX,aDtDS,CCuDZ,iBAIG,KAAM,CACN,MAAO,CACP,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,uBAAwB,CACxB,OAAQ,CACR,gBAAiB,CACjB,8BAA+B,CAC/B,8BAA+B,CAC/B,uBAAwB,CACxB,eAAgB,CAChB,uBAAuB,CAAvB,oBAAuB,CAAvB,sBAAuB,CACvB,sBAA2B,CAA3B,mBAA2B,CAA3B,0BAA2B,CAC3B,oBAAiB,CAAjB,gBAAiB,CACjB,2BAAsB,CAAtB,4BAAsB,CAAtB,yBAAsB,CAAtB,qBAAsB,CACtB,oDAAY,CAAZ,4CAAY,CAAZ,oCAAY,CAAZ,4DAAqC,CAjBxC,iCAoBO,oBAAqB,CACrB,mBAAoB,CACpB,gBAAiB,CAtBxB,uCA0BW,WAAY,CA1BvB,4BAgCO,WAAY,CACZ,qDAAgD,CAAhD,6CAAgD,CAChD,oDAAY,CAAZ,4CAAY,CAAZ,oCAAY,CAAZ,4DAAqC,CAlC5C,sBAsCO,WAAY,CACZ,qDAA+B,CAA/B,6CAAgD,CAxC5D,uBA6CQ,YAAa,CACb,aAAc,CACd,eAAgB,CAChB,QAAS,CACT,0CAAmC,CAAnC,kCAAmC,CACnC,SAAU,CACV,QAAS,CAnDjB,4BAsDY,0CAAmC,CAAnC,kCAAmC,CACnC,kBDpIO,CCqIP,aAAc,CAxD1B,kBA+DY,aDzHU,CC0HV,iBAAkB,CAClB,cD9IO,CC+IP,aD3HK,CC4HR,YAID,UAAW,CACX,2BAAQ,CAAR,gBAAQ,CAAR,OAAQ,CACR,aAAc,CAzEtB,wBA6EQ,2BAAO,CAAP,gBAAO,CAAP,OAAQ,CACX","file":"templates/travelsoft/components/bitrix/menu/top-menu-desctop/css/navbar.css","sourcesContent":["@function cr($size) {\n  $remSize: $size / 16px;\n  @return #{$remSize}rem;\n}\n@function ind($i){\n  $size: 1px / 3px * $i;\n  @return #{$size}rem;\n}\n\n$primary: #ff6917;\n$secondary: #ff6917;\n$rating-star: #ffc917;\n\n\n//форма поиска на главной\n$color-label-search-form: white;\n$background-header-form: transparent;\n$background-body-form: transparent;\n//настройки текста контента\n$font-body: Roboto;\n$nav-color-link:#263238;\n$nav-color-link-mobile:#263238;\n$main-color-text: #263238;\n$secondary-color-text: #455a64;\n\n//цвет вторичного фона\n$section-background-2:#f4f7f7;\n\n//цвета опции тура\n$color-best-price: red;\n$color-new: #ffc917;\n$color-doc: $primary;\n$color-custom-tour:green;\n\n//тени\n$shadow:0 0px 15px #d8d8d847;\n$shadow-hover: 0 0px 15px #77767647;\n\n//бордер\n$border-card: 1px solid #b3b3b3 !important;\n\n//карточки\n$card-hover-background:#40322d98;\n$card-background: white;\n//navbar\n$navbar-background: white;\n\n//contact--list\n$navbar-dectop--contact--list-flexbasis: 65%;\n$navbar-contact--list-item-padding:cr(10px);\n$navbar-desctop--contact--list-item-padding: cr(3px);\n$navbar-desctop--contact--list-font-size: cr(13px);\n\n//цвет линии hr\n\n\n$hr-color:263238;\n.hr{\n  height: 1px;\n  width: 100%;\n  background: $hr-color;\n}\n\n//кнопки\n$btn-radius:cr(5px);\n$theme-colors: (\n        \"primary\": $primary,\n        \"secondary\": $secondary\n);\n$btn-padding: cr(15px);\n$btn-height: cr(45px);\n$btn-width: cr(45px);\n\n// форма\n$input-radius:cr(5px);\n$input-height: cr(45px);\n\n\n//Заголовки\n$font-h: Merriweather;\n$header-color: #263238;\n$header-color-invers:#fffdfc;\n$header-hr-width: cr(100px);\n$header-hr-height: cr(2px);\n$header-hr-color: #263238;\nh1,h2,h3,h4,h5,h6{\n  font-family: $font-h;\n  color: $header-color;\n}\n\n//сетка\n$max-width-container:1560px;\n$container-max-widths: (\n        sm: 660px,\n        md: 840px,\n        lg: 1080px,\n        xl: 1320px\n);\n$grid-breakpoints: (\n        xs: 0,\n        sm: 660px,\n        md: 840px,\n        lg: 1080px,\n        xl: 1320px\n);\n\n\nbody{\n  min-height: 2600px;\n\n  color: $main-color-text;\n  font-family: $font-body;\n}","@import \"../utils/var.scss\";\n@import \"../bscss/_mixins.scss\";\n.navbar {\n    padding: 0;\n\n    &-desctop {\n        padding: 0;\n    }\n\n    &--container {\n        border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n        background: $navbar-background;\n        box-shadow: $shadow;\n    }\n\n    &-collapse {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    &-toggler {\n        .icon {\n            color: $nav-color-link;\n            font-size: cr(24px);\n        }\n\n        transition: transform .3s;\n\n        &:active {\n            transition: transform .3s;\n            transform: scale(.95);\n        }\n    }\n\n    &-nav {\n        padding: 0;\n        margin: 0;\n    }\n\n    .dropdown-toggle::after {\n        margin-top: 3px;\n    }\n\n    .nav {\n        &-link {\n            color: $nav-color-link;\n\n            &.dropdown-toggle {\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n\n                &[aria-expanded=\"true\"] {\n                    &:after {\n                        transform: rotate(180deg);\n                    }\n                }\n            }\n        }\n    }\n}\n\n    @include media-breakpoint-up(lg) {\n        .navbar-desctop {\n            padding: .5rem 0;\n            border-top: $border-card;\n\n        }\n    }\n\n    @include media-breakpoint-down(md) {\n        .dropdown {\n            &-item {\n                color: $nav-color-link-mobile;\n                padding: 1rem 1rem;\n                font-size: cr(16px);\n                color: $main-color-text;\n            }\n        }\n        .navbar {\n            &-collapse {\n                top: 0;\n                left: 0;\n                -ms-flex-wrap: wrap;\n                flex-wrap: wrap;\n                position: fixed;\n                height: 100vh !important;\n                width: 0;\n                background: white;\n                display: -webkit-box !important;\n                display: -ms-flexbox !important;\n                display: flex !important;\n                overflow: hidden;\n                align-items: flex-start;\n                justify-content: flex-start;\n                flex-wrap: nowrap;\n                flex-direction: column;\n                transition: width .3s, box-shadow .3s;\n\n                .navbar-toggler {\n                    margin: .5rem .5rem 0;\n                    padding: .5rem .5rem;\n                    margin-left: auto;\n\n                    .icon {\n\n                        color: black;\n                    }\n\n                }\n\n                &.collapsing {\n                    width: 320px;\n                    box-shadow: 1px 1px 1px 2000px rgba(0, 0, 0, .3);\n                    transition: width .3s, box-shadow .3s;\n                }\n\n                &.show {\n                    width: 320px;\n                    box-shadow: 1px 1px 1px 2000px rgba(0, 0, 0, .3);\n                }\n            }\n\n            .dropdown-menu {\n                max-height: 0;\n                display: block;\n                overflow: hidden;\n                margin: 0;\n                transition: max-height .5s ease-out;\n                padding: 0;\n                border: 0;\n\n                &.show {\n                    transition: max-height .5s ease-out;\n                    max-height: cr(600px);\n                    overflow: auto;\n                }\n            }\n\n\n            .nav {\n                &-link {\n                    color: $nav-color-link-mobile;\n                    padding: 1rem 1rem;\n                    font-size: cr(16px);\n                    color: $main-color-text;\n                }\n            }\n\n            &-nav {\n                width: 100%;\n                order: 1;\n                overflow: auto;\n            }\n\n            [class^=\"form\"] {\n                order: 0;\n            }\n\n        }\n    }\n\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}