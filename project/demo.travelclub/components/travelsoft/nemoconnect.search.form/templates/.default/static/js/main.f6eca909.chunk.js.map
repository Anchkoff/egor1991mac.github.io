{"version":3,"sources":["source/const.js","components/loader/index.js","container/form/context/autoCompleateReducer.js","hooks/useSetParentContext.js","container/form/context/autoCompleateState.js","container/form/context/context.js","components/autocompleate/result.js","container/form/context/PopupReducer.js","container/form/context/PopupState.js","hooks/clickOutside.js","components/popper/index.js","components/autocompleate/index.js","components/datepicker/locale.js","components/datepicker/index.js","container/form/context/DatePickerStateReducer.js","container/form/context/DatePickerState.js","container/form/context/CounterReducer.js","container/form/context/CounterState.js","components/counter/result.js","components/counter/index.js","container/form/context/formReducer.js","hooks/useCustomEvent.js","container/form/context/formState.js","container/form/index.js","container/filter/index.js","serviceWorker.js","index.js","source/api.js"],"names":["FETCH_DATA","INPUT_DATA","SELECT_DATA","PLACEHOLDER_DATA","FETCH_STATUS_DATA","SHOW_DATA","HIDE_DATA","INCREMENT_DATA","DICREMENT_DATA","QUERY_DATA","Preloader","classes","className","handlers","DEFAULT","state","payload","AutoCompleateReducer","action","type","useSetParentContext","key","getData","useContext","FormContext","useMemo","AutoCompleateState","url","inputName","children","defaultData","defaultState","length","OBJECT_TYPE","UF_CITY_RU","UF_NAME_RU","data","useFetchDataAutoCompleate","useReducer","dispatch","AutoCompleateContext","Provider","value","handleFetchData","a","async","handleSelectData","flag","handleInputClearData","handleInputSetData","handleFetchStatus","createContext","displayName","PopupContext","DatePickerContext","CounterContext","Result","handleHidePopup","fetchingData","read","airports","groupBy","item","countries","Object","values","forEach","airport","index","country","find","UF_CODE","UF_COUNTRY","replace","UF_COUNTRY_NAME_RU","handleClick","e","keys","map","onClick","UF_AREA","style","position","display","ID","PopupReducer","VISIBLE","PopupState","handleShowPopup","useOutsideClick","ref","callback","current","contains","target","useEffect","document","addEventListener","removeEventListener","Popup","innerRef","useState","node","setNode","popupRef","useRef","Manager","ReactDOM","createPortal","Popper","placement","referenceElement","arrowProps","data-placement","zIndex","getElementById","AutoCompleate","lang","InputRef","React","createRef","htmlFor","LABEL","placeholder","isEmpty","onChange","onBlur","onFocus","name","data-value","JSON","stringify","autoComplete","fallback","WEEKDAYS_SHORT","MONTHS","DatePicker","showBtnClose","handleSelectDay","handleClearDay","formatDate","firstDayOfWeek","months","locale","weekdaysLong","weekdaysShort","initialMonth","Date","disabledDays","before","modifiers","sunday","daysOfWeek","selectedDays","onDayClick","day","DatePickerReducer","console","log","DatePickerState","moment","toDate","CounterReducer","CounterState","adults","baby","handleIncrement","handleDicrement","label","info","preventDefault","Counter","FormReducer","useCustomEvent","nameEvent","dispatchEvent","CustomEvent","detail","FormState","mode","handleSubmit","SEARCH","DEPARTURE","INPUT_NAME","CITY_INPUT_NAME_RU","ARRIVAL","DATE_DEPARTURE","format","DATE_ARRIVAL","PESSANGER","window","location","origin","qs","history","pushState","reload","Form","query","IS_AJAX_MODE","Consumer","props","data-gutter","URL_DATA_FROM","SEARCH_DATA","FROM","OK_BTN","URL_DATA_TO","TO","DATE_FROM","DATE_TO","PESSENGERS","PESSENGER","ADULTS","ONE_ADULT","ADULTS_INFO","CHILDREN","ONE_CHILD","BABIES","ONE_BABY","BABIES_INFO","SUBMIT","Index","event","Boolean","hostname","match","lazy","navigator","serviceWorker","ready","then","registration","unregister","AviaApp","rootElem","typeElem","langElem","initReact","hydrate","elem","alert","this","queryParam","newValue","sleep","time","Promise","resolve","setTimeout","wrapPromise","promise","result","status","suspender","r","fetchDataTicketsPost","URL","body","axios","get","getTimeFromMins","mins","d","h","m","utc","hours","minutes","fetchData","useFetchDataTicketsGet"],"mappings":"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","file":"static/js/main.f6eca909.chunk.js","sourcesContent":["\n\n\n\n\n// action Name\n\nexport const FETCH_DATA = \"FETCH_DATA\";\nexport const INPUT_DATA = \"INPUT_DATA\";\nexport const SELECT_DATA = \"SELECT_DATA\";\nexport const PLACEHOLDER_DATA = \"PLACEHOLDER_DATA\";\nexport const FETCH_STATUS_DATA = \"FETCH_STATUS_DATA\";\nexport const SHOW_DATA = \"SHOW_DATA\";\nexport const HIDE_DATA = \"HIDE_DATA\";\nexport const INCREMENT_DATA = \"INCREMENT_DATA\";\nexport const DICREMENT_DATA = \"DICREMENT_DATA\";\nexport const QUERY_DATA = \"QUERY_DATA\";\n\n\n\n","import React from 'react';\n\nconst Preloader = ({classes}) => {\n    return (\n        <div  className={classes}>\n        <div className=\"lds-roller\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n        </div>\n    );\n};\n\nexport default Preloader;","import {FETCH_DATA, SELECT_DATA, FETCH_STATUS_DATA, PLACEHOLDER_DATA, INPUT_DATA} from '../../../source/const';\n\n\nconst handlers = {\n    DEFAULT: state => state,\n    [FETCH_DATA]: (state, {payload}) => ({...payload}),\n    [SELECT_DATA]: (state, {payload}) => ( {...state,...payload}),\n    [INPUT_DATA]:(state,{payload}) => ({...state,...payload}),\n    [PLACEHOLDER_DATA]:(state,{payload}) => ({...state,...payload}),\n    [FETCH_STATUS_DATA]: (state, {payload}) => ({...state,...payload}),\n};\n\n\nexport const AutoCompleateReducer = (state, action, type) => {\n    const handle = handlers[action.type] || handlers.DEFAULT;\n    return handle(state, action);\n}","import {useMemo, useContext} from 'react';\nimport {SELECT_DATA} from \"../source/const\";\nimport {FormContext} from \"../container/form/context/context\";\n\n//key ключ объекта state[SELECT_DATA][key];\n\nconst useSetParentContext = (state, key) =>{\n    const {getData} = useContext(FormContext);\n\n    useMemo(()=>{\n        getData(state,key);\n    },[state]);\n}\n\nexport default useSetParentContext;","import React, {useReducer, useMemo, useContext} from 'react';\nimport {AutoCompleateContext} from './context.js';\nimport {AutoCompleateReducer} from \"./autoCompleateReducer\";\nimport {FormContext} from \"./context\";\nimport {FETCH_DATA, SELECT_DATA, FETCH_STATUS_DATA, INPUT_DATA, PLACEHOLDER_DATA} from \"../../../source/const\";\nimport {useFetchDataAutoCompleate} from \"../../../source/api\";\nimport useSetParentContext from \"../../../hooks/useSetParentContext\";\n\nfunction sleep (time) {\n    return new Promise((resolve) => setTimeout(resolve, time));\n}\n\n\n\n\nexport const AutoCompleateState = ({url, inputName, children,defaultData}) => {\n    const defaultState = {\n            [FETCH_DATA]: null,\n            [SELECT_DATA]: {},\n            [INPUT_DATA]:'',\n            [FETCH_STATUS_DATA]:1,\n            [PLACEHOLDER_DATA]:''\n    };\n    if(defaultData.length > 0){\n        defaultState[SELECT_DATA] = defaultData[0];\n        defaultState[INPUT_DATA] = defaultData[0].OBJECT_TYPE == 'city' ? defaultData[0].UF_CITY_RU\n            : defaultData[0].UF_NAME_RU != '' ? defaultData[0].UF_NAME_RU : defaultData[0].UF_CITY_RU;\n        defaultState[PLACEHOLDER_DATA] = defaultData[0].OBJECT_TYPE == 'city' ? defaultData[0].UF_CITY_RU\n            : defaultData[0].UF_NAME_RU != '' ? defaultData[0].UF_NAME_RU : defaultData[0].UF_CITY_RU;\n    }\n\n\n    const data = useFetchDataAutoCompleate(url);\n    const [state, dispatch] = useReducer(AutoCompleateReducer, defaultState);\n\n\n    useSetParentContext(state[SELECT_DATA],inputName);\n\n    const handleFetchData = async (value = '') => {\n        if(value.length >= 2){\n            dispatch({\n                type: FETCH_DATA,\n                payload: {\n                    [FETCH_DATA]: data(value),\n                }\n            })\n        }\n    };\n\n    const handleSelectData = (value = {},flag) => {\n        value.OBJECT_TYPE = flag == 0 ? 'city' : 'airport';\n        dispatch({\n            type: SELECT_DATA,\n            payload: {\n                    [SELECT_DATA]:value,\n                    [INPUT_DATA]: `${value.UF_NAME_RU.length > 0 ? flag == 1 ? value.UF_NAME_RU : value.UF_CITY_RU : value.UF_CITY_RU}`,\n                    [PLACEHOLDER_DATA]: `${value.UF_NAME_RU.length > 0 ? flag == 1 ? value.UF_NAME_RU : value.UF_CITY_RU : value.UF_CITY_RU}`,\n                }\n        });\n    };\n\n    const handleInputSetData = (value = {}) =>{\n            dispatch({\n                type: INPUT_DATA,\n                payload: {\n                    [INPUT_DATA]:value\n                }\n            });\n    };\n\n    const handleInputClearData = (value = '') =>{\n        dispatch({\n            type: INPUT_DATA,\n            payload: {\n                    [INPUT_DATA]:value,\n                }\n        });\n    };\n\n    const handleFetchStatus = (value = 1) =>{\n        dispatch({\n            type: FETCH_STATUS_DATA,\n            payload: {\n                [FETCH_STATUS_DATA]:value,\n            }\n        });\n    };\n\n    return (\n        <AutoCompleateContext.Provider\n            value={{\n                handleFetchData,\n                handleSelectData,\n                handleInputClearData,\n                handleInputSetData,\n                handleFetchStatus,\n                state,\n                inputName\n            }}\n        >\n\n            {\n                children\n            }\n        </AutoCompleateContext.Provider>\n\n    )\n};\n","import {createContext} from \"react\";\nimport {AutoCompleateState} from \"./autoCompleateState\";\nexport const AutoCompleateContext = createContext();\nAutoCompleateContext.displayName = \"AutoCompleateContext\";\nexport const PopupContext = createContext();\nPopupContext.displayName = \"PopupContext\";\nexport const DatePickerContext = createContext();\nDatePickerContext.displayName = \"DatePickerContext\";\nexport const CounterContext = createContext();\nCounterContext.displayName = \"CounterContext\";\nexport const FormContext = createContext();\nFormContext.displayName = \"FormContext\";\n\n\n","import React, {useContext} from 'react';\nimport {groupBy} from \"lodash\";\nimport {AutoCompleateContext, PopupContext} from \"../../container/form/context/context\";\nimport {FETCH_DATA} from \"../../source/const\";\n\n\nconst Result = ({}) => {\n    const {state, type, handleSelectData, handleFetchStatus} = useContext(AutoCompleateContext);\n    const {handleHidePopup} = useContext(PopupContext);\n\n\n    //console.log(state[FETCH_DATA].read());\n\n\n    const fetchingData = state[FETCH_DATA] ? state[FETCH_DATA].read().data : null;\n    const airports = fetchingData ? groupBy(fetchingData.airports, (item) => item.UF_CITY_RU) : null;\n    const countries = fetchingData ? fetchingData.countries : [];\n\n    if (airports != null) {\n        Object.values(airports).forEach((airport, index) => {\n            let country = countries.find(country => country.UF_CODE == airport[0].UF_COUNTRY.replace(/\"/g));\n\n            if (airport.length > 0) {\n                airport.forEach(item => {\n                    item.UF_COUNTRY_NAME_RU = typeof country != \"undefined\" ? country.UF_NAME_RU : '';\n                })\n            }\n        })\n    }\n\n\n    const handleClick = (item,flag) => e => {\n        handleSelectData(item,flag);\n        handleHidePopup();\n    };\n\n    return (\n        airports ?\n            <div className={'popupForm'}>\n            <ul className={\"autoCompleate\"}>\n                {\n                    Object.keys(airports).map((key, index) =>\n\n                        <li key={index} className={\"autoCompleate-item\"}>\n\n                            <div className={\"autoCompleate-item__header\"} onClick={handleClick(airports[key][0],0)}>\n                                <div>\n                                    {key}, <small >{airports[key][0].UF_COUNTRY_NAME_RU}</small>\n                                </div>\n                                <div>\n                                    <small>\n                                        {airports[key][0].UF_AREA}\n                                    </small>\n                                </div>\n\n                            </div>\n                            <ul className={\"autoCompleate-inner\"} style={{position: \"relative\", display: \"block\"}}>\n                                {\n                                    airports[key].map(item =>\n                                        <li key={item.ID} onClick={handleClick(item,1)}\n                                            className={\"autoCompleate-inner-item\"}>\n                                            <span>{item.UF_NAME_RU == \"\" ? key : item.UF_NAME_RU}</span><small>{item.UF_CODE} </small>\n                                        </li>\n                                    )\n                                }\n                            </ul>\n\n                        </li>\n                    )\n                }\n            </ul>\n            </div>\n            : null\n    )\n    //return null;\n};\n\nexport default Result;","import {SHOW_DATA, HIDE_DATA} from '../../../source/const';\n\n\n\nconst handlers = {\n    DEFAULT: state => state,\n    [HIDE_DATA]: (state, {payload}) => ({...payload}),\n    [SHOW_DATA]: (state, {payload}) => ({...payload}),\n};\n\n\nexport const PopupReducer = (state, action) => {\n    const handle = handlers[action.type] || handlers.DEFAULT;\n    return handle(state, action);\n}","import React, {useReducer} from 'react';\n\nimport {PopupReducer} from \"./PopupReducer\";\nimport {SHOW_DATA, HIDE_DATA} from \"../../../source/const\";\nimport {PopupContext, FormContext} from \"./context\";\n\n\nconst defaultState = {\n    VISIBLE: false,\n};\n\nexport const PopupState = ({children}) => {\n\n    const [state, dispatch] = useReducer(PopupReducer, defaultState);\n\n    const handleShowPopup = () =>{\n        dispatch({\n            type:[SHOW_DATA],\n            payload: {VISIBLE:true}\n        })\n    };\n    const handleHidePopup = () =>{\n        dispatch({\n            type:[HIDE_DATA],\n            payload: {VISIBLE:false}\n        })\n    };\n\n\n    return (\n        <PopupContext.Provider\n            value={{\n                state,\n                handleShowPopup,\n                handleHidePopup\n            }}\n        >\n            {\n                children\n            }\n        </PopupContext.Provider>\n\n    )\n};\n","import { useEffect } from \"react\";\n\nconst useOutsideClick = (ref, callback) => {\n\n    const handleClick = e => {\n        if (ref.current && !ref.current.contains(e.target)) {\n            callback();\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"click\", handleClick);\n\n        return () => {\n            document.removeEventListener(\"click\", handleClick);\n        };\n    });\n};\n\nexport default useOutsideClick;\n\n\n\n","import React, {useContext, useEffect,useState, useRef} from \"react\";\nimport ReactDOM, {createPortal} from 'react-dom';\nimport {Manager, Reference, Popper} from 'react-popper';\nimport {PopupContext} from \"../../container/form/context/context\";\nimport {PopupState} from \"../../container/form/context/PopupState\";\nimport useOutsideClick  from '../../hooks/clickOutside';\nconst Popup = ({innerRef,children}) =>{\n\n\n\n    const {state:{VISIBLE},handleHidePopup} = useContext(PopupContext);\n\n\n    const [node,setNode] = useState(innerRef.current);\n    useEffect(()=>{\n        if(innerRef){\n            setNode(innerRef.current);\n        }\n    },[innerRef.current]);\n\n\n    const popupRef = useRef(null);\n    useOutsideClick(popupRef,()=>{\n       handleHidePopup();\n    });\n\n    return (\n        VISIBLE &&\n            <Manager>{\n                ReactDOM.createPortal(\n\n                    <Popper placement=\"bottom-start\" referenceElement={node}>\n\n                        {({ ref, style, placement, arrowProps }) => {\n\n                            return(\n                            <div ref={ref}  data-placement={placement} style={{...style,zIndex:9999999}} >\n                                <div ref={popupRef}>\n                                {\n                                    children\n                                }\n                                </div>\n                            </div>\n                        )}}\n                    </Popper>,document.getElementById(\"autoCompleatePopper\"))\n            }\n            </Manager>\n\n    )\n\n}\n\n\nexport default Popup;","import React, {Suspense, useState, useContext, useRef, useLayoutEffect,useMemo, useEffect} from 'react';\nimport Result from \"./result\";\nimport {AutoCompleateContext, PopupContext} from \"../../container/form/context/context\";\nimport {SEARCH_DATA, SELECT_DATA, INPUT_DATA, FETCH_DATA, FETCH_STATUS_DATA} from \"../../source/const\";\nimport {isEmpty} from 'lodash';\nimport Popup from '../popper';\nimport {PopupState} from \"../../container/form/context/PopupState\";\nimport Preloader from \"../loader\";\n\n// const templateValue =  (state) =>{\n//     return `${state.UF_NAME_RU ? state.UF_NAME_RU : state.UF_CITY_RU}`\n// }\n\n\n\n\n\n\nconst AutoCompleate = ({lang,inputName}) => {\n\n    const {state:{SELECT_DATA, INPUT_DATA, PLACEHOLDER_DATA},handleFetchData, handleInputClearData, handleInputSetData, handleFetchStatus} = useContext(AutoCompleateContext);\n    const {handleShowPopup} = useContext(PopupContext);\n\n\n\n    const handleChange = ({target: {value}}) => {\n        handleFetchData(value);\n        handleInputSetData(value);\n        handleShowPopup(true);\n    };\n\n    const handleFocus = () =>{\n        handleInputClearData();\n    };\n    const handleBlur = () =>{\n        if(!isEmpty(SELECT_DATA)){\n            handleInputSetData(PLACEHOLDER_DATA)\n        }\n    };\n\n\n\n    const InputRef = React.createRef();\n\n\n\n    return (\n\n            <div\n                className=\"theme-search-area-section first theme-search-area-section-fade-white theme-search-area-section-no-border theme-search-area-section-mr theme-search-area-section-sm theme-search-area-section-curved\">\n                <label htmlFor=\"\" className={\"theme-search-area-section-label text-white _ml-10\"}>{lang.LABEL}</label>\n                <div className=\"theme-search-area-section-inner\">\n                    <i className=\"theme-search-area-section-icon lin lin-location-pin\"></i>\n                    <input className=\"theme-search-area-section-input typeahead\"\n                           type=\"text\" //\n                           placeholder={!isEmpty(SELECT_DATA) ? PLACEHOLDER_DATA : lang.LABEL}\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                           onFocus={handleFocus}\n                           name={inputName}\n                           data-value = {JSON.stringify(SELECT_DATA)}\n                           ref={InputRef}\n                           value={INPUT_DATA || ''}\n                           autoComplete=\"off\"\n                    />\n                    <Suspense fallback={<Preloader classes={'input_preloader'}/>}>\n                        <Popup innerRef={InputRef}>\n                                <Result/>\n                        </Popup>\n                    </Suspense>\n\n                </div>\n            </div>\n\n    );\n};\n\nexport default AutoCompleate;","export const WEEKDAYS_SHORT = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\nexport const MONTHS =\n [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ];\n\n\nexport const WEEKDAYS_LONG = [\n\n        'Воскресенье',\n        'Понедельник',\n        'Вторник',\n        'Среда',\n        'Четверг',\n        'Пятница',\n        'Суббота',\n\n\n];\n\nexport const FIRST_DAY_OF_WEEK = {\n    ru: 1,\n};","import React, {useContext} from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport * as locale from './locale';\nimport MomentLocaleUtils, {\n    formatDate,\n    parseDate,\n} from 'react-day-picker/moment';\n\nimport './style.scss';\n\nimport {DatePickerContext, PopupContext} from \"../../container/form/context/context\";\nimport {SELECT_DATA} from \"../../source/const\";\nimport Popup from \"../popper\";\n\nfunction dateToSting(val){\n    console.log(new Date().now());\n    return `${val.getUTCDay()}.${val.getUTCMonth()}.${val.getUTCFullYear()}`;\n}\nconst DatePicker = ({inputName, lang, showBtnClose=false}) => {\n    const {handleShowPopup, handleHidePopup} = useContext(PopupContext);\n    const {state,handleSelectDay,handleClearDay} = useContext(DatePickerContext);\n    const InputRef = React.createRef();\n\n    const modifires = {\n        sunday: {daysOfWeek: [0, 6]},\n        //hilight: toDateArray(initData)\n    };\n\n    return (\n        <div\n            className=\"theme-search-area-section first theme-search-area-section-fade-white theme-search-area-section-no-border theme-search-area-section-mr theme-search-area-section-sm theme-search-area-section-curved\">\n            <label htmlFor=\"\" className={\"theme-search-area-section-label text-white _ml-10\"}>{lang.LABEL}</label>\n            <div className=\"theme-search-area-section-inner\">\n\n                <i className=\"theme-search-area-section-icon lin lin-calendar\"></i>\n\n\n                <input className=\"theme-search-area-section-input \"\n                       type=\"text\"\n                       placeholder={lang.LABEL}\n                       onClick={handleShowPopup}\n                       ref={InputRef}\n                       data-value={JSON.stringify(formatDate(state[SELECT_DATA],'DD.MM.YYYY'))}\n                       name={inputName}\n                       value = {state[SELECT_DATA] ? formatDate(state[SELECT_DATA],'DD.MM.YYYY') : ''}\n                       autoComplete=\"off\"\n                />\n                {\n                    state[SELECT_DATA] &&\n                    <span onClick={handleClearDay} className={\"lin lin-close search_form-clear-btn\"}></span>\n                }\n\n                <Popup innerRef={InputRef}>\n                    <div className={'popupForm'}>\n                        {\n                            showBtnClose &&\n                                <button onClick={(e)=>{\n                                    handleHidePopup();\n                                    handleClearDay();\n                                }} className={\"btn btn-primary-inverse  _mr-10 _ml-10 _mt-10 mb-20\"}>Обратный билет не нужен</button>\n                        }\n\n                    <DayPicker\n                        firstDayOfWeek={1}\n                        months={locale.MONTHS}\n                        weekdaysLong={locale.WEEKDAYS_SHORT}\n                        weekdaysShort={locale.WEEKDAYS_SHORT}\n                        initialMonth={new Date()}\n                        disabledDays={{\n                            before: new Date()\n                        }}\n                        modifiers={modifires}\n                        selectedDays={state[SELECT_DATA]}\n                        onDayClick={(day)=>{\n                            handleSelectDay(day);\n                            handleHidePopup();\n                        }}\n                    />\n                    </div>\n                </Popup>\n            </div>\n        </div>\n    );\n};\n\nexport default DatePicker;","import {SELECT_DATA} from '../../../source/const';\n\n\n\nconst handlers = {\n    DEFAULT: state => state,\n    [SELECT_DATA]: (state, {payload}) => ({...payload}),\n};\n\n\nexport const DatePickerReducer = (state, action) => {\n    console.log(state,action);\n    const handle = handlers[action.type] || handlers.DEFAULT;\n    return handle(state, action);\n}","import React, {useReducer} from 'react';\nimport {DatePickerContext} from './context.js';\nimport {DatePickerReducer} from \"./DatePickerStateReducer\";\nimport {SELECT_DATA, } from \"../../../source/const\";\nimport useSetParentContext from \"../../../hooks/useSetParentContext\";\nimport moment from 'moment';\n\n\nexport const DatePickerState = ({url,inputName,children,defaultData=''}) => {\n    console.log();\n    const defaultState = {\n        [SELECT_DATA]: defaultData ? moment(defaultData,'DD.MM.YYYY').toDate() : ''\n    }\n\n\n    const [state, dispatch] = useReducer(DatePickerReducer, defaultState);\n\n\n    useSetParentContext(state[SELECT_DATA],inputName);\n\n    const handleSelectDay = (value = new Date()) =>{\n        dispatch({\n            type: SELECT_DATA,\n            payload:{\n                [SELECT_DATA]:value\n            }\n        })\n    };\n    const handleClearDay = (value = null) => {\n        dispatch({\n            type: SELECT_DATA,\n            payload:{\n                [SELECT_DATA]:null\n            }\n        })\n    };\n\n    return (\n        <DatePickerContext.Provider\n            value={{\n                handleSelectDay,\n                handleClearDay,\n                state,\n            }}\n        >\n            {\n                children\n            }\n        </DatePickerContext.Provider>\n\n    )\n}\n","import {INCREMENT_DATA, DICREMENT_DATA} from '../../../source/const';\n\n\n\nconst handlers = {\n    DEFAULT: state => state,\n    [INCREMENT_DATA]: (state, {payload}) => ({...state,...payload}),\n    [DICREMENT_DATA]: (state, {payload}) => ({...state,...payload}),\n};\n\n\nexport const CounterReducer = (state, action) => {\n    const handle = handlers[action.type] || handlers.DEFAULT;\n    return handle(state, action);\n}","import React, {useReducer} from 'react';\nimport {CounterContext} from './context.js';\nimport {CounterReducer} from \"./CounterReducer\";\nimport { INCREMENT_DATA, DICREMENT_DATA } from \"../../../source/const\";\nimport useSetParentContext from \"../../../hooks/useSetParentContext\";\n\n\n\nexport const CounterState = ({url,inputName,children, defaultData}) => {\n    const defaultState = defaultData ? defaultData :{\n        adults:1,\n        children:0,\n        baby:0,\n    }\n\n    const [state, dispatch] = useReducer(CounterReducer, defaultState);\n\n    useSetParentContext(state,inputName);\n\n    const handleIncrement = (key) =>{\n        dispatch({\n            type: INCREMENT_DATA,\n            payload: {\n                [key]:state[key] <= 14 ? state[key] + 1 : state[key]\n            }\n        })\n    };\n    const handleDicrement  = (key) =>{\n        dispatch({\n            type: DICREMENT_DATA,\n            payload: {\n                [key]:state[key] >= 1 ? state[key] - 1 : state[key]\n            }\n        })\n    };\n\n    return (\n        <CounterContext.Provider\n            value={{\n                handleIncrement,\n                handleDicrement,\n                state,\n            }}\n        >\n            {\n                children\n            }\n        </CounterContext.Provider>\n\n    )\n}\n","import React, {useContext} from 'react';\nimport {CounterContext} from \"../../container/form/context/context\";\n\nconst Result = ({lang}) => {\n    const {state, handleIncrement, handleDicrement} = useContext(CounterContext);\n    console.log(lang);\n    return (\n\n        <div className=\"quantity-selector-box show\" >\n            {\n                Object.keys(state).map(key=>{\n                    {\n                        return(\n                        <div className=\"quantity-selector-inner\" key={key}>\n                            <p className=\"quantity-selector-title\">\n                                {\n                                    lang[key].label[0]\n                                }\n\n                                <small>\n                                    {lang[key].info}\n                                </small>\n                            </p>\n                            <ul className=\"quantity-selector-controls\">\n                                <li className=\"quantity-selector-decrement\">\n                                    <a  onClick={(e)=>{\n                                        e.preventDefault();\n                                        handleDicrement(key)\n                                    }}>-</a>\n                                </li>\n                                <li className=\"quantity-selector-current\">{state[key]}</li>\n                                <li className=\"quantity-selector-increment\">\n                                    <a  onClick={(e)=> {\n                                        e.preventDefault();\n                                        handleIncrement(key)\n                                    }}>+</a>\n                                </li>\n                            </ul>\n                        </div>)\n                    }\n                })\n            }\n\n        </div>\n    );\n};\n\nexport default Result;","import React, {useContext} from 'react';\nimport {SELECT_DATA} from \"../../source/const\";\nimport Popup from \"../popper\";\nimport {CounterContext, PopupContext} from \"../../container/form/context/context\";\nimport './style.scss';\nimport Result   from './result'\n\nconst Counter = ({inputName,lang}) => {\n    const {handleShowPopup, handleHidePopup} = useContext(PopupContext);\n    const {state,state:{adults,children,baby}} = useContext(CounterContext);\n    const InputRef = React.createRef();\n\n    return (\n        <div\n            className=\"theme-search-area-section first theme-search-area-section-fade-white theme-search-area-section-no-border theme-search-area-section-mr theme-search-area-section-sm theme-search-area-section-curved\">\n            <label htmlFor=\"\" className={\"theme-search-area-section-label text-white _ml-10\"}>{lang.label[0]}</label>\n            <div className=\"theme-search-area-section-inner\">\n                <i className=\"theme-search-area-section-icon  lin lin-people\"></i>\n                <input className=\"theme-search-area-section-input\"\n                       type=\"text\"\n                       placeholder={lang.label[1]}\n                       name={inputName}\n                       data-value={JSON.stringify(state)}\n                       value={`${adults + children + baby} ${(adults + children + baby) > 1 ? lang.label[1] : lang.label[1]}`}\n                       onClick={handleShowPopup}\n                       ref={InputRef}\n                       autoComplete=\"off\"\n                />\n            </div>\n\n            <Popup innerRef={InputRef}>\n               <Result lang={lang}/>\n            </Popup>\n        </div>\n    );\n};\n\nexport default Counter;","import {SELECT_DATA} from '../../../source/const';\n\n\n\nconst handlers = {\n    DEFAULT: state => state,\n    [SELECT_DATA]: (state, {payload}) => ({...state,...payload}),\n};\n\n\nexport const FormReducer = (state, action) => {\n    const handle = handlers[action.type] || handlers.DEFAULT;\n    return handle(state, action);\n};","const useCustomEvent = (nameEvent,data) =>{\n    document.dispatchEvent(new CustomEvent(nameEvent, {\n        detail:{...data}\n    }));\n}\n\nexport default useCustomEvent;","import React, {useReducer} from 'react';\nimport {FormContext} from './context.js';\nimport {FormReducer} from \"./formReducer\";\nimport {SELECT_DATA} from \"../../../source/const\";\nimport CustomEvent from \"../../../hooks/useCustomEvent\";\nimport {isEmpty} from 'lodash';\nimport moment from 'moment';\nimport qs from 'qs';\n\n\nexport const FormState = ({children,mode}) => {\n\n\n    const [state, dispatch] = useReducer(FormReducer, {});\n\n    const getData = (data, key) => {\n        dispatch({\n            type: [SELECT_DATA],\n            payload: {\n                [key]: data\n            }\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const action = \"flights\";\n\n        const data= {\n            SEARCH: {\n                DEPARTURE: state.DEPARTURE.OBJECT_TYPE == 'airport' ? state.DEPARTURE.INPUT_NAME : state.DEPARTURE.CITY_INPUT_NAME_RU,\n                ARRIVAL:state.ARRIVAL.OBJECT_TYPE == 'airport' ? state.ARRIVAL.INPUT_NAME : state.ARRIVAL.CITY_INPUT_NAME_RU,\n                DATE_DEPARTURE: state.DATE_DEPARTURE ? moment(state.DATE_DEPARTURE).format('DD.MM.YYYY') : null,\n                DATE_ARRIVAL: state.DATE_ARRIVAL ? moment(state.DATE_ARRIVAL).format('DD.MM.YYYY') : null,\n                PESSANGER: state.PESSANGER,\n            }\n        };\n\n\n\n\n        let url = `${window.location.origin}/${action}/?${qs.stringify(data)}`;\n\n\n\n        if(mode == 'N'){\n            window.history.pushState(data,'SEARCH', url);\n            window.location.reload();\n        }\n        else{\n            window.history.pushState(data,'', url);\n            CustomEvent(\"dispatchForm\",data);\n        }\n\n    };\n\n\n\n\n    return (\n        <FormContext.Provider\n            value={{\n                getData,\n                handleSubmit,\n                state,\n            }}\n        >\n                {\n                    children\n                }\n\n\n        </FormContext.Provider>\n    )\n}\n","import React from 'react';\nimport {URL_DATA_FROM, URL_DATA_TO} from \"../../source/const\";\nimport AutoCompleate from \"../../components/autocompleate\";\nimport {AutoCompleateState} from \"./context/autoCompleateState\";\nimport DatePicker from \"../../components/datepicker\";\nimport {PopupState} from \"./context/PopupState\";\nimport {DatePickerState} from \"./context/DatePickerState\";\nimport {CounterState} from \"./context/CounterState\";\nimport Counter from '../../components/counter';\nimport {FormState} from \"./context/formState\";\nimport {FormContext} from \"./context/context\";\nimport {isEmpty} from \"lodash\";\n\n\nconst Form = ({lang, defaultData, query}) => {\n\n    return (\n\n        <>\n            <FormState mode={defaultData.IS_AJAX_MODE}>\n                <FormContext.Consumer>\n                    {\n                        (props) =>\n                            <form>\n                                <div className=\"row\" data-gutter=\"none\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"row\" data-gutter=\"none\">\n                                        <div className=\"col-md-6\">\n                                <PopupState>\n                                    <AutoCompleateState url={query.URL_DATA_FROM} type={'FROM'} inputName={\"DEPARTURE\"}\n                                                        defaultData={defaultData.SEARCH_DATA.DEPARTURE}>\n                                        <AutoCompleate\n                                            lang={\n                                                {\n                                                    LABEL: lang.FROM,\n                                                    OK_BTN: lang.OK_BTN\n                                                }\n                                            }\n                                        />\n                                    </AutoCompleateState>\n                                </PopupState>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                <PopupState>\n                                    <AutoCompleateState url={query.URL_DATA_TO} type={'TO'} inputName={\"ARRIVAL\"}\n                                                        defaultData={defaultData.SEARCH_DATA.ARRIVAL}>\n                                        <AutoCompleate\n                                            lang={\n                                                {\n                                                    LABEL: lang.TO,\n                                                    OK_BTN: lang.OK_BTN\n                                                }\n                                            }\n                                        />\n                                    </AutoCompleateState>\n                                </PopupState>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                <div className=\"row\" data-gutter=\"none\">\n                                    <div className=\"col-md-4\">\n                                        <PopupState>\n                                            <DatePickerState inputName={\"DATE_DEPARTURE\"}\n                                                             defaultData={defaultData.SEARCH_DATA.DATE_DEPARTURE}>\n                                                <DatePicker\n                                                    lang={\n                                                        {\n                                                            LABEL: lang.DATE_FROM,\n                                                            OK_BTN: lang.OK_BTN\n                                                        }\n                                                    }\n                                                />\n                                            </DatePickerState>\n                                        </PopupState>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <PopupState>\n                                            <DatePickerState inputName={\"DATE_ARRIVAL\"}\n                                                             defaultData={defaultData.SEARCH_DATA.DATE_ARRIVAL || null}>\n\n                                                <DatePicker\n                                                    lang={\n                                                        {\n                                                            LABEL: lang.DATE_TO,\n                                                            OK_BTN: lang.OK_BTN\n                                                        }\n                                                    }\n                                                    showBtnClose={true}\n                                                />\n                                            </DatePickerState>\n                                        </PopupState>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <PopupState>\n                                            <CounterState inputName={\"PESSANGER\"}\n                                                          defaultData={defaultData.SEARCH_DATA.PESSANGER}>\n                                                <Counter\n                                                    lang={{\n                                                        label: [lang.PESSENGERS, lang.PESSENGER],\n                                                        adults: {\n                                                            label: [lang.ADULTS, lang.ONE_ADULT],\n                                                            info: lang.ADULTS_INFO\n                                                        },\n                                                        children: {\n                                                            label: [lang.CHILDREN, lang.ONE_CHILD],\n                                                            info: lang.ADULTS_INFO\n                                                        },\n                                                        baby: {\n                                                            label: [lang.BABIES, lang.ONE_BABY],\n                                                            info: lang.BABIES_INFO\n                                                        },\n                                                        OK_BTN: lang.OK_BTN\n                                                        }\n                                                    }\n                                                />\n                                            </CounterState>\n                                        </PopupState>\n                                    </div>\n                                </div>\n                                </div>\n                                <div className=\"col-md-1\">\n                                    <button onClick={props.handleSubmit}\n                                            className={\"theme-search-area-submit _mt-20 theme-search-area-submit-no-border theme-search-area-submit-white theme-search-area-submit-sm theme-search-area-submit-curved\"}> {lang.SUBMIT}</button>\n                                </div>\n                                </div>\n                            </form>\n                    }\n                </FormContext.Consumer>\n\n            </FormState>\n\n        </>\n\n\n    );\n};\n\nexport default Form;","import React from 'react';\nimport {} from '../../source/api';\nconst Index = ({lang,callback}) => {\n    function HandleClick(e) {\n        e.preventDefault();\n        let event =  new CustomEvent('queryParam',{detail:'hello'});\n        document.dispatchEvent(event);\n    }\n    return (\n        <>\n            фильтр\n        <form action=\"\">\n            <div className=\"form-group\">\n                <label htmlFor=\"\">\n                    {lang.FROM.label}\n                </label>\n                <input type=\"text\"/>\n            </div>\n            <div className=\"form-group\">\n            </div>\n            <button onClick={HandleClick}></button>\n        </form>\n            </>\n    );\n};\n\nexport default Index;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Suspense, lazy} from 'react';\nimport ReactDOM from 'react-dom';\nimport Preloader from './components/loader';\nimport './index.scss';\n\nimport Form from './container/form';\nimport Filter from './container/filter';\n//import moment from 'moment';\nimport * as serviceWorker from './serviceWorker';\n\nconst Result = lazy(() => import('./container/result'));\n//ReactDOM.render(<Form/>, document.getElementById('AviaAppForm'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nclass AviaApp {\n    constructor(rootElem, typeElem, langElem, defaultData) {\n        this.rootElem = {\n            elem: rootElem || null,\n            type: typeElem || null,\n            lang: langElem || null,\n            defaultData: defaultData || null,\n            query: null\n        };\n        this.queryParam = defaultData;\n    }\n\n    get _rootElem() {\n        return this.rootElem;\n    }\n\n    set _rootElem(newValue) {\n        if (newValue) {\n            this.rootElem = newValue;\n            this.initReact();\n        }\n    }\n\n\n    initReact = () => {\n        if (this.rootElem) {\n            switch (this.rootElem.type) {\n                case 'Form':\n                    ReactDOM.hydrate(<Form lang={this.rootElem.lang}\n                                           query={this.rootElem.query}\n                                           defaultData={this.rootElem.defaultData}/>\n                                           , this.rootElem.elem);\n                    break;\n                case 'Filter':\n                    ReactDOM.hydrate(<Filter lang={this.rootElem.lang}/>, this.rootElem.elem);\n                    break;\n                case 'Result':\n                    ReactDOM.hydrate(\n                        <Suspense fallback={<div><Preloader/></div>}>\n                            <Result lang={this.rootElem.lang} query={this.rootElem.query}/>\n                        </Suspense>\n                        , this.rootElem.elem);\n                    break;\n                default:\n                    alert('no init');\n                    break;\n            }\n\n        }\n    }\n}\n\n\n//form\nwindow.AviaApp = new AviaApp();\n// const app = new AviaApp();\n// app._rootElem = {\n//     elem: document.querySelector('#AviaAppForm'),\n//     type: 'Form',\n//     lang: {\n//         FROM: \"Откуда\",\n//         TO: \"Куда\",\n//         DATE_FROM: \"Дата вылета\",\n//         DATE_TO: \"Дата вылета обратно\",\n//         PESSENGERS: \"Пассажиры и класс\",\n//         PESSENGER: \"Пассажиры\",\n//         ADULTS: \"Взрослых\",\n//         ADULTS_INFO: \"от 14 и старше\",\n//         ONE_ADULT: \"Взрослый\",\n//         CHILDREN: \"Детей\",\n//         CHILDREN_INFO: \"от 2 до 14\",\n//         ONE_CHILD: \"Ребенок\",\n//         BABIES: \"Младенцев\",\n//         BABIES_INFO: \"от 2 до 14\",\n//         ONE_BABY: \"Младенец\",\n//         SUBMIT: \"Найти\",\n//         OK_BTN: \"OK\",\n//     },\n//     defaultData: {\n//         REQUEST: null,\n//         IS_AJAX_MODE: window.location.href == window.location.origin ? \"N\" : \"Y\",\n//         DATE_FORMAT: 'DD.MM.YYYY',\n//         SEARCH_DATA: {\n//             DEPARTURE: [\n//                 {\n//                     ID: \"1779\",\n//                     UF_CODE: \"DME\",\n//                     UF_CITY_RU: \"Москва\",\n//                     UF_CITY_EN: \"Moscow\",\n//                     UF_NAME_RU: \"Домодедово\",\n//                     UF_NAME_EN: \"Domodedovo\",\n//                     UF_AREA: \"MOW\",\n//                     UF_COUNTRY: \"RU\",\n//                     UF_TIMEZONE: \"Europe/Moscow\",\n//                     UF_LAT: \"55.4145\",\n//                     UF_LNG: \"37.8999\",\n//                     INPUT_NAME: \"airport:1779\",\n//                     CITY_RU_ID: \"Москва~RU\",\n//                     CITY_INPUT_NAME_RU: \"city:Москва~RU\",\n//                     CITY_EN_ID: \"Moscow~RU\",\n//                     CITY_INPUT_NAME_EN: \"city:Moscow~RU\",\n//                     OBJECT_TYPE: \"city\",\n//                 }\n//             ],\n//             ARRIVAL: [\n//                 {\n//                     ID: \"2159\",\n//                     UF_CODE: \"EWR\",\n//                     UF_CITY_RU: \"Нью-Йорк\",\n//                     UF_CITY_EN: \"New-York\",\n//                     UF_NAME_RU: \"Ньюарк Либерти\",\n//                     UF_NAME_EN: \"Newark Liberty\",\n//                     UF_AREA: \"NYC\",\n//                     UF_COUNTRY: \"US\",\n//                     UF_TIMEZONE: \"America/New_York\",\n//                     UF_LAT: \"40.69709\",\n//                     UF_LNG: \"-74.17557\",\n//                     INPUT_NAME: \"airport:2159\",\n//                     CITY_RU_ID: \"Нью-Йорк~US\",\n//                     CITY_INPUT_NAME_RU: \"city:Нью-Йорк~US\",\n//                     CITY_EN_ID: \"New-York~US\",\n//                     CITY_INPUT_NAME_EN: \"city:New-York~US\",\n//                     OBJECT_TYPE: \"city\",\n//                 }\n//             ],\n//             DATE_DEPARTURE: \"17.01.2020\",\n//             //DATE_ARRIVAL: \"14.01.2020\",\n//             PESSANGER: {\n//                 adults: 3,\n//                 children: 0,\n//                 baby: 0\n//             }\n//         }\n//\n//     },\n//     query: {\n//         URL_DATA_FROM: 'http://travelclub.travelsoft.by/local/components/travelsoft/nemoconnect.search.form/templates/.default/ajax/from.php',\n//         URL_DATA_TO: 'http://travelclub.travelsoft.by/local/components/travelsoft/nemoconnect.search.form/templates/.default/ajax/to.php',\n//     }\n// }\n//\n//\n// app.initReact();\n//\n// app._rootElem = {\n//     elem: document.getElementById(\"AviaAppResult\"),\n//     type: 'Result',\n//     defaultData:{\n//     },\n//     query:'http://travelclub.travelsoft.by/local/components/travelsoft/nemoconnect.search.result/templates/.default/ajax.php'\n// }\n// app.initReact();\n// app.initReact();\n//filter\n//     AviaApp._rootElem ={\n//         elem: document.querySelector('#AviaAppFilter'),\n//         type: 'Filter',\n//         lang: {\n//             FROM:{\n//                 label:\"from\",\n//                 placeholder: \"set from\",\n//                 popper:\"set from\",\n//                 button:\"select\"\n//             }\n//         }};\n//     AviaApp.initReact();\n//\n//    //result\n// AviaApp._rootElem ={\n//     elem: document.querySelector('#AviaAppResult'),\n//     type: 'Result',\n//     lang: {\n//         FROM:{\n//             label:\"from\",\n//             placeholder: \"set from\",\n//             popper:\"set from\",\n//             button:\"select\"\n//         }\n//     }};\n// AviaApp.initReact();\n\n\n\n\n\n","import axios from 'axios';\nimport {groupBy} from 'lodash';\nimport moment from 'moment';\n\nconst sleep = (time) => new Promise(resolve => setTimeout(resolve, time));\n\n\nfunction wrapPromise(promise) {\n    let status = 'pending';\n    let result;\n\n    const suspender = promise\n        .then(r => {\n            result = r;\n            status = 'success';\n        }, e => {\n            result = e;\n            status = 'error';\n        });\n\n    return {\n        read() {\n\n            if (status == 'pending') {\n                throw suspender;\n            } else if (status == 'error') {\n\n                throw result;\n            } else if (status == 'success') {\n\n                return result;\n            }\n\n        },\n\n\n    }\n\n};\n\nconst fetchData = async (URL) => {\n    try {\n        await sleep(300);\n        let data = await axios.get(URL);\n        return await data;\n    } catch (e) {\n        throw e;\n    }\n};\n\nconst fetchDataTicketsGet = async (URL) => {\n    try {\n        let data = await axios.get(URL);\n        return await data;\n    } catch (e) {\n        throw e;\n    }\n};\nconst fetchDataTicketsPost = async (URL, body) => {\n    try {\n        let data = await axios.get(URL, body);\n        return await data;\n    } catch (e) {\n        throw e;\n    }\n};\n\nfunction getTimeFromMins(mins) {\n\n    if (mins >= 24 * 60 || mins < 0) {\n        var d = mins / 1440 | 0,\n            mins = mins - d * 1440;\n        var h = mins / 60 | 0,\n            m = mins % 60 | 0;\n\n        // console.log('error')\n        // // var d = mins % 1440 | 0,\n        // //     h = mins / 60 | 0,\n        // //     m = mins % 60 | 0;\n      return `${d}д ${moment.utc().day(d).hours(h).minutes(m).format(\"HHч mmм\")}`;\n\n    } else {\n        var\n            h = mins / 60 | 0,\n            m = mins % 60 | 0;\n\n        return moment.utc().hours(h).minutes(m).format(\"HHч mmм\");\n    }\n\n}\n\n// const Demo = async (time,demoData) =>{\n//         await sleep(time);\n//         return new Promise((resolve)=>resolve(demoData))\n// };\n// const FetchAllData = async (data) =>{\n//    return await axios.all([Demo(1000,data),Demo(500,data)]);\n// }\n\n\nconst useFetchDataAutoCompleate = URL => value => wrapPromise(fetchData(`${URL}/?q=${value}`));\n\nconst useFetchDataTicketsPost = (URL, body) => wrapPromise(fetchDataTicketsPost(URL, body));\nconst useFetchDataTicketsGet = (URL) => wrapPromise(fetchDataTicketsPost(URL));\n\n//const useFetchDemoData = (data) => wrapPromise(FetchAllData(data));\n\nexport {useFetchDataAutoCompleate, useFetchDataTicketsPost, useFetchDataTicketsGet, getTimeFromMins};\n\n\n\n"],"sourceRoot":""}